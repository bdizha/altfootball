(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "knockout", "./router", "./utils"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var ko = require("knockout");
    var router_1 = require("./router");
    var utils_1 = require("./utils");
    ko.bindingHandlers.path = {
        init: function (el, valueAccessor, allBindings, viewModel, bindingCtx) {
            var activePathCSSClass = allBindings.get('pathActiveClass') || router_1.Router.config.activePathCSSClass;
            router_1.Router.initialized.then(function () {
                var route = ko.pureComputed(function () { return utils_1.traversePath(getRouter(bindingCtx), ko.unwrap(valueAccessor())); });
                ko.applyBindingsToNode(el, {
                    attr: {
                        href: ko.pureComputed(function () { return utils_1.resolveHref(route()); })
                    },
                    css: (_a = {},
                        _a[activePathCSSClass] = ko.pureComputed(function () { return utils_1.isActivePath(route()); }),
                        _a)
                });
                var _a;
            });
        }
    };
    function getRouter(bindingCtx) {
        while (!utils_1.isUndefined(bindingCtx)) {
            if (!utils_1.isUndefined(bindingCtx.$router)) {
                return bindingCtx.$router;
            }
            bindingCtx = bindingCtx.$parentContext;
        }
        return router_1.Router.head;
    }
});
//# sourceMappingURL=binding.js.map